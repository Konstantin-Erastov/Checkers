for each draught
    find available move steps

on cell click(cell)
    var move = activePlayer.getMove()
    if move.containsSecondCell(cell)
        move.undoUntil(cell)
        redraw
        return
    moveStep = getAvailableStepBySecondCell(cell)
    if moveStep == null
        return
    if !move.started()
        move.setStartCell(cell)
        set available move steps for player to available move steps from started cell draught
        redraw
        return



    board.applyStep(moveStep)
        activePlayer.pushMoveStep(moveStep)
        for each draught
            find available move steps



on cell click (cell)
    if cell in move
        move.undoUntil(cell)
        redraw
        return


    cells = getAvailableCells()
    if cell not in cells
        return

    if not move.started
        if canStart(cell)
            move.start(cell)
            togglePlayer
            redraw
        return


    //move.started
    step = move.addStep(cell)
    if not isValidMove(step)
        return
    board.applyStep(step)
    cells = getAvailableCells()
    //if cells.size() == 0
    if not hasAvailableCells()
        move.clear()
        onMoveFinished


    redraw

